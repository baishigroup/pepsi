<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.erp.mapper.cao.MaterialMapperC" >
  <resultMap id="BaseResultMap" type="com.zking.erp.model.cao.Material" >
    <constructor >
      <idArg column="Id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="CategoryId" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Mfrs" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Packing" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="SafetyStock" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="Model" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Standard" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Color" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Unit" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Remark" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="RetailPrice" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="LowPrice" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="PresetPriceOne" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="PresetPriceTwo" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="UnitId" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="FirstOutUnit" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="FirstInUnit" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="PriceStrategy" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Enabled" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="OtherField1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="OtherField2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="OtherField3" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    Id, CategoryId, Name, Mfrs, Packing, SafetyStock, Model, Standard, Color, Unit, Remark,
    RetailPrice, LowPrice, PresetPriceOne, PresetPriceTwo, UnitId, FirstOutUnit, FirstInUnit, 
    PriceStrategy, Enabled, OtherField1, OtherField2, OtherField3
  </sql>
  <insert id="insertMaterial" parameterType="com.zking.erp.model.cao.Material">
    INSERT INTO material (id, CategoryId, NAME, Mfrs, Packing, SafetyStock, Model, Standard,
    Color, Unit, UnitId, FirstOutUnit, FirstInUnit, PriceStrategy, RetailPrice, LowPrice,
    PresetPriceOne, PresetPriceTwo, Remark, Enabled, OtherField1, OtherField2, OtherField3)
    VALUES (#{id}, #{categoryid}, #{name}, #{mfrs}, #{packing}, #{safetystock}, #{model}, #{standard},
    #{color}, #{unit}, #{unitid}, #{firstoutunit}, #{firstinunit}, #{pricestrategy}, #{retailprice},
    #{lowprice}, #{presetpriceone}, #{presetpricetwo}, #{remark}, #{enabled}, #{otherfield1},
    #{otherfield2}, #{otherfield3})
  </insert>
  <update id="updateMaterial" parameterType="com.zking.erp.model.cao.Material">
    UPDATE material SET CategoryId=#{categoryid}, NAME=#{name}, Mfrs=#{mfrs}, Packing=#{packing},
    SafetyStock=#{safetystock}, Model=#{model}, Standard=#{standard}, Color=#{color}, Unit=#{unit},
    UnitId=#{unitid}, FirstOutUnit=#{firstoutunit}, FirstInUnit=#{firstinunit},
    PriceStrategy=#{pricestrategy}, RetailPrice=#{retailprice}, LowPrice=#{lowprice},
    PresetPriceOne=#{presetpriceone}, PresetPriceTwo=#{presetpricetwo}, Remark=#{remark},
    Enabled=#{enabled}, OtherField1=#{otherfield1}, OtherField2=#{otherfield2},
    OtherField3=#{otherfield3} WHERE Id=#{id}
  </update>
  <update id="batchSetEnable" parameterType="com.zking.erp.model.cao.Material">
    UPDATE material set enabled=#{enabled}
    <foreach collection="materialIDs" item="id" open=" where id in(" close=")" separator="," index="idx">
      #{id}
    </foreach>
  </update>
  <delete id="deleteMaterialById">
    DELETE from material where id=#{id}
  </delete>
  <delete id="deleteMaterialByIds" parameterType="com.zking.erp.model.cao.Material">
    DELETE from material where 1=1
    <foreach collection="materialIDs" item="id" open=" and id in(" close=")" separator="," index="idx">
      #{id}
    </foreach>
  </delete>

  <select id="queryById" resultType="com.zking.erp.model.cao.Material"
          parameterType="com.zking.erp.model.cao.Material">
    SELECT u.id UnitId,u.UName UnitName, m.*  FROM material m LEFT JOIN unit u ON m.UnitId=u.id WHERE m.id=#{id}
  </select>
  <select id="checkIsExist" resultType="com.zking.erp.model.cao.Material">
    select <include refid="Base_Column_List"/>
    from material where 1=1
    <if test="null!=param2 and ''!=param2">
      and (name=#{param2})
    </if>
    <if test="null!=param4 and ''!=param4">
      and (id !=#{param4})
    </if>
  </select>
  <select id="queryMaterialPager" resultType="com.zking.erp.model.cao.Material"
          parameterType="com.zking.erp.model.cao.Material">
    SELECT mc.name CategoryName,u.id UnitId,u.UName UnitName,m.*  FROM material m LEFT JOIN
    materialcategory mc ON m.CategoryId=mc.id LEFT JOIN unit u
    ON m.UnitId=u.id  WHERE 1=1
    <if test="null!=name and ''!=name">
      and m.name like concat(concat('%',#{name}),'%')
    </if>
    <if test="null!=model and ''!=model">
      and m.model like concat(concat('%',#{model}),'%')
    </if>
    <if test="null!=color and ''!=color">
      and m.color=#{color}
    </if>
    <if test="categoryid!='1'">
    <if test="null!=ids and ''!=ids">
    <foreach collection="ids" item="id" open=" and m.CategoryId in(" close=")" separator="," index="idx">
        #{id}
      </foreach>
    </if>
    </if>
    ORDER BY Id ASC
  </select>
    <select id="queryByOrder" resultType="com.zking.erp.model.cao.Material"
            parameterType="com.zking.erp.model.cao.Material">
      SELECT <include refid="Base_Column_List"/>
      from material where 1=1 GROUP BY name,model asc
    </select>


</mapper>